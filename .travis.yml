language: cpp

sudo: false

branches:
    only:
        - master

compiler:
    - gcc
    - clang

env:
    global:
        - CMAKE_VERSION="cmake-3.2.3-Linux-x86_64"
        - CMAKE_BINARY="${CMAKE_VERSION}/bin/cmake"
        - CDRIVER_VERSION="1.5.3"

    matrix:
        - CONFIG=Release
        - CONFIG=Debug

addons:
    apt:
        sources:
            # Add the modern toolchain repositories (llvm repo depends on ubunut-toolchain-r + gcc)
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
            # Add the MongoDB 3.2 repository
            - mongodb-3.2-precise
        packages:
            - mongodb-org-server
            - g++-6
            - clang-3.8

install:
    # GCC
    - if [ "$CXX" = "g++" ]; then export CXX="g++-6"; export CC="gcc-6"; export NO_ERROR_ON_MAYBE_UNINITIALIZED="-Wno-error=maybe-uninitialized"; fi

    # Clang
    - if [ "$CXX" == "clang++" ]; then export CXX="clang++-3.8"; export CC="clang-3.8"; fi

    # Don't Wno-error-maybe-uninitialized if we're in a Debug build
    - if [ "$CONFIG" == "Debug"]; then export NO_ERROR_ON_MAYBE_UNINITIALIZED=""; fi

    # Prepare pkg-config path
    - export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$HOME/deps/lib/pkgconfig/

    # Install dependencies
    - curl -O https://cmake.org/files/v3.2/${CMAKE_VERSION}.tar.gz
    - tar -zxf ${CMAKE_VERSION}.tar.gz -C build
    - bash travis-install-deps.sh

before_script:
    - $CC --version
    - $CXX --version

    # Build Mangrove and its tests
    - export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$HOME/install/lib/pkgconfig
    - cd build
    - export CC_FLAGS="-Wall -Wextra -Wno-attributes -Werror -Wno-error=missing-field-initializers ${NO_ERROR_ON_MAYBE_UNINITIALIZED}"
    - ${CMAKE_BINARY} -DCMAKE_BUILD_TYPE=$CONFIG -DCMAKE_MODULE_PATH=$HOME/deps/mongo-cxx-driver/cmake -Dlibbsoncxx_DIR=$HOME/deps/lib/cmake/libbsoncxx-3.1.1 -Dlibmongocxx_DIR=$HOME/deps/lib/cmake/libmongocxx-3.1.1 -DCMAKE_INSTALL_PREFIX=$HOME/install -DCMAKE_C_FLAGS="${CC_FLAGS}" -DCMAKE_CXX_FLAGS="${CC_FLAGS}" ..
script:
    - make format-lint

    - make -j$(grep -c ^processor /proc/cpuinfo) all

    # Run boson tests with catch
    - ./src/boson/test/test_boson

    # Run boson tests with catch
    - ./src/mangrove/test/test_mangrove

    # Install headers and libs for the examples
    - make install

    # Make the examples
    - make examples

    # Run the examples
    - make run-examples

cache:
    directories:
    - $HOME/deps
